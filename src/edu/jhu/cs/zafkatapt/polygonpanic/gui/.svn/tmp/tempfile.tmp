package edu.jhu.cs.zafkatapt.polygonpanic.gui;

import java.util.List;

import edu.jhu.cs.zafkatapt.polygonpanic.network.Client;
import edu.jhu.cs.zafkatapt.polygonpanic.network.NetworkEvent;
import edu.jhu.cs.zafkatapt.polygonpanic.network.NetworkListener;
import android.app.Activity;
import android.content.Intent;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Spinner;

/**
 * The Class Lobby. Provides a list of available games to join.
 */
public class Lobby extends Activity
{
	Spinner lobbylist;

	public static Client networking;

	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		// TODO Auto-generated method stub
		
		super.onCreate(savedInstanceState);
		setContentView(R.layout.lobby);
		lobbylist = (Spinner)findViewById(R.id.LobbySpinner);
		lobbylist.setPrompt("Select a game!");
		lobbylist.setOnItemSelectedListener(new PanicOnItemSelectedListener());
		Lobby.networking = new Client(this.getLocalIpAddress());
		Lobby.networking.addListener(new NetworkListener()
		{

			@Override
			public void receiveEvent(NetworkEvent event)
			{
				// TODO Auto-generated method stub
				if(event.equals(NetworkEvent.startHosting))
				{
<<<<<<< .mine
					System.out.println("---------------------------startHosting----------------------------");
					setContentView(R.layout.loading);
=======
					Lobby.this.setContentView(R.layout.loading);
>>>>>>> .r160
				}
				else if(event.equals(NetworkEvent.hostReceivedConnection))
				{
					Intent h = new Intent(Lobby.this, GameScreen.class);
					Lobby.this.startActivity(h);
				}
				else if(event.equals(NetworkEvent.connectedToHost))
				{
					Lobby.this.setContentView(R.layout.loading);
					Intent c = new Intent(Lobby.this, GameScreen.class);
					Lobby.this.startActivity(c);
				}
				else if(event.equals(NetworkEvent.receivedP2Units))
				{
					/**
					 * client has received a list of units from other player.
					 * Call networking.getP2Units() and use that to update the
					 * model
					 */
				}
			}
		});

	}

	public void back(View view)
	{
		finish();
	}

	/**
	 * Refresh. Refreshes the screen to display the current active lobbies.
	 */
	public void refresh(View view)
	{
		ArrayAdapter<String> games = new ArrayAdapter<String>(
				this.getApplicationContext(),
				android.R.layout.simple_spinner_item);

		// Add items to the list
		List<String> hosts = Lobby.networking.getHosts();

		games.add("Select a Game");
		for(String i : hosts)
		{
			games.add(i);
		}

		lobbylist.setAdapter(games);

	}

	public void host(View view)
	{
		Lobby.networking.host();
		// Intent room = new Intent(Lobby.this, Room.class);
		// Lobby.this.startActivity(room);
	}

	public class PanicOnItemSelectedListener implements OnItemSelectedListener
	{

		public void onItemSelected(AdapterView<?> parent, View view, int pos,
				long id)
		{
			System.out.println(parent.getItemAtPosition(pos).toString());
			if(parent.getItemAtPosition(pos).toString().equals("Select a Game"))
				return;
			Lobby.networking.connect(parent.getItemAtPosition(pos).toString());
		}

		public void onNothingSelected(AdapterView<?> parent)
		{
			// Do nothing.

		}
	}

	public String getLocalIpAddress()
	{
		WifiManager wifiManager = (WifiManager)getSystemService(WIFI_SERVICE);
		WifiInfo wifiInfo = wifiManager.getConnectionInfo();
		int ipAddress = wifiInfo.getIpAddress();
		String ip = String
				.format("%d.%d.%d.%d", (ipAddress&0xff), (ipAddress>>8&0xff),
						(ipAddress>>16&0xff), (ipAddress>>24&0xff));
		return ip;
	}
}
